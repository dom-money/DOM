# TBD:
# Implement deploy jobs to run via gitlab runner with docker executor ...
# .. (instead of shell executor) and implement usage of pm2 deployment system.

stages:
  - build
  - test
  - deploy

variables:
  NODE_VER: '16.18.1'

cache: &global_cache
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/
  policy: pull-push


build_app:
  stage: build

  image: node:$NODE_VER

  tags: [ 'docker' ]

  artifacts:
    paths:
      - .next/

  script:
    - yarn
    - yarn build
    
  only:
    - merge_requests
    - main


test_app:
  stage: test

  image: node:$NODE_VER

  tags: [ 'docker' ]

  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
  
  script:
    - yarn
    - yarn test:ci-coverage
    
  only:
    - merge_requests
    - main


test_storybook:
  stage: test

  # Using playwright docker image (docker image version must match the ...
  # .. version used by the app)
  image: mcr.microsoft.com/playwright:v1.26.0-focal

  tags: [ 'docker' ]

  script:
    - yarn
    - yarn test-storybook:ci

  only:
    - merge_requests
    - main


deploy_app:
  stage: deploy

  before_script:
    - cd $HOME/dom-pwa/
    - git config --global user.email "olef_and@ukr.net"
    - git config --global user.name "andrii"
    - GIT_SSH_COMMAND='ssh -i /home/gitlab-runner/.ssh/gitlab_rsa' git pull

  script:
    - yarn
    - yarn build
    - pm2 restart dom
  
  after_script:
    - exit
    
  only:
    - main

prebuild_storybook:
  stage: deploy

  script:
    - yarn test:ci-generate-output
  
  after_script:
    - exit
  
  needs: [ 'deploy_app' ]
    
  only:
    - main

deploy_storybook:
  stage: deploy

  script:
    # Currently, there is a problem with using artifacts from a runner that ...
    # uses a docker executor on a runner with a shell executor.
    # See: https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1180
    # As a workaround, we run jest tests again to generate the test results ...
    # .. in the production folder for Storybook to use.
    - yarn test:ci
    - pm2 restart storybook
  
  after_script:
    - exit
  
  artifacts:
    paths:
      - .jest-test-results.json
  
  dependencies: [ 'prebuild_storybook' ]
  
  needs: [ 'deploy_app', 'prebuild_storybook' ]
    
  only:
    - main
